// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AnswersColumns holds the columns for the "answers" table.
	AnswersColumns = []*schema.Column{
		{Name: "oid", Type: field.TypeUUID},
		{Name: "text", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// AnswersTable holds the schema information for the "answers" table.
	AnswersTable = &schema.Table{
		Name:       "answers",
		Columns:    AnswersColumns,
		PrimaryKey: []*schema.Column{AnswersColumns[0]},
	}
	// ChoicesColumns holds the columns for the "choices" table.
	ChoicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "label", Type: field.TypeString, Nullable: true},
		{Name: "value", Type: field.TypeString},
		{Name: "answer_choices", Type: field.TypeUUID, Nullable: true},
		{Name: "question_choices", Type: field.TypeUUID, Nullable: true},
	}
	// ChoicesTable holds the schema information for the "choices" table.
	ChoicesTable = &schema.Table{
		Name:       "choices",
		Columns:    ChoicesColumns,
		PrimaryKey: []*schema.Column{ChoicesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "choices_answers_choices",
				Columns:    []*schema.Column{ChoicesColumns[3]},
				RefColumns: []*schema.Column{AnswersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "choices_questions_choices",
				Columns:    []*schema.Column{ChoicesColumns[4]},
				RefColumns: []*schema.Column{QuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "oid", Type: field.TypeUUID},
		{Name: "prospective_id", Type: field.TypeString, Unique: true},
		{Name: "user_id", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:       "customers",
		Columns:    CustomersColumns,
		PrimaryKey: []*schema.Column{CustomersColumns[0]},
	}
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "oid", Type: field.TypeUUID},
		{Name: "prospective_id", Type: field.TypeString, Unique: true},
		{Name: "existing_id", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 50},
		{Name: "description", Type: field.TypeString, Size: 255},
		{Name: "est_budget", Type: field.TypeFloat64},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "customer_projects", Type: field.TypeUUID, Nullable: true},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:       "projects",
		Columns:    ProjectsColumns,
		PrimaryKey: []*schema.Column{ProjectsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "projects_customers_projects",
				Columns:    []*schema.Column{ProjectsColumns[8]},
				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// QuestionsColumns holds the columns for the "questions" table.
	QuestionsColumns = []*schema.Column{
		{Name: "oid", Type: field.TypeUUID},
		{Name: "text", Type: field.TypeString, Unique: true},
		{Name: "sub_text", Type: field.TypeString, Nullable: true},
		{Name: "weight", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "required", Type: field.TypeBool, Nullable: true, Default: true},
		{Name: "meta", Type: field.TypeJSON},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// QuestionsTable holds the schema information for the "questions" table.
	QuestionsTable = &schema.Table{
		Name:       "questions",
		Columns:    QuestionsColumns,
		PrimaryKey: []*schema.Column{QuestionsColumns[0]},
	}
	// QuestionTypesColumns holds the columns for the "question_types" table.
	QuestionTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "description", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"MULTIPLE_CHOICE", "NUMBER", "MAP", "SHORT", "ESSAY", "KEY_VALUE"}},
	}
	// QuestionTypesTable holds the schema information for the "question_types" table.
	QuestionTypesTable = &schema.Table{
		Name:       "question_types",
		Columns:    QuestionTypesColumns,
		PrimaryKey: []*schema.Column{QuestionTypesColumns[0]},
	}
	// SurveysColumns holds the columns for the "surveys" table.
	SurveysColumns = []*schema.Column{
		{Name: "oid", Type: field.TypeUUID},
		{Name: "identifier", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Size: 50},
		{Name: "description", Type: field.TypeString, Size: 50},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// SurveysTable holds the schema information for the "surveys" table.
	SurveysTable = &schema.Table{
		Name:       "surveys",
		Columns:    SurveysColumns,
		PrimaryKey: []*schema.Column{SurveysColumns[0]},
	}
	// SurveyInvitationsColumns holds the columns for the "survey_invitations" table.
	SurveyInvitationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"UNSEEN", "INCOMPLETE", "COMPLETED"}, Default: "UNSEEN"},
		{Name: "sent", Type: field.TypeBool, Default: false},
		{Name: "sent_times", Type: field.TypeJSON},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "customer_survey_invitations", Type: field.TypeUUID, Nullable: true},
		{Name: "project_survey_invitations", Type: field.TypeUUID, Nullable: true},
		{Name: "survey_survey_invitations", Type: field.TypeUUID, Nullable: true},
	}
	// SurveyInvitationsTable holds the schema information for the "survey_invitations" table.
	SurveyInvitationsTable = &schema.Table{
		Name:       "survey_invitations",
		Columns:    SurveyInvitationsColumns,
		PrimaryKey: []*schema.Column{SurveyInvitationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "survey_invitations_customers_survey_invitations",
				Columns:    []*schema.Column{SurveyInvitationsColumns[6]},
				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "survey_invitations_projects_survey_invitations",
				Columns:    []*schema.Column{SurveyInvitationsColumns[7]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "survey_invitations_surveys_survey_invitations",
				Columns:    []*schema.Column{SurveyInvitationsColumns[8]},
				RefColumns: []*schema.Column{SurveysColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SurveyQuestionAnswersColumns holds the columns for the "survey_question_answers" table.
	SurveyQuestionAnswersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "question_num", Type: field.TypeInt64, Default: 1},
		{Name: "answer_survey_question_answers", Type: field.TypeUUID, Nullable: true},
		{Name: "question_survey_question_answers", Type: field.TypeUUID},
		{Name: "survey_survey_question_answers", Type: field.TypeUUID},
	}
	// SurveyQuestionAnswersTable holds the schema information for the "survey_question_answers" table.
	SurveyQuestionAnswersTable = &schema.Table{
		Name:       "survey_question_answers",
		Columns:    SurveyQuestionAnswersColumns,
		PrimaryKey: []*schema.Column{SurveyQuestionAnswersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "survey_question_answers_answers_survey_question_answers",
				Columns:    []*schema.Column{SurveyQuestionAnswersColumns[2]},
				RefColumns: []*schema.Column{AnswersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "survey_question_answers_questions_survey_question_answers",
				Columns:    []*schema.Column{SurveyQuestionAnswersColumns[3]},
				RefColumns: []*schema.Column{QuestionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "survey_question_answers_surveys_survey_question_answers",
				Columns:    []*schema.Column{SurveyQuestionAnswersColumns[4]},
				RefColumns: []*schema.Column{SurveysColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// QuestionTypeQuestionsColumns holds the columns for the "question_type_questions" table.
	QuestionTypeQuestionsColumns = []*schema.Column{
		{Name: "question_type_id", Type: field.TypeInt},
		{Name: "question_id", Type: field.TypeUUID},
	}
	// QuestionTypeQuestionsTable holds the schema information for the "question_type_questions" table.
	QuestionTypeQuestionsTable = &schema.Table{
		Name:       "question_type_questions",
		Columns:    QuestionTypeQuestionsColumns,
		PrimaryKey: []*schema.Column{QuestionTypeQuestionsColumns[0], QuestionTypeQuestionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "question_type_questions_question_type_id",
				Columns:    []*schema.Column{QuestionTypeQuestionsColumns[0]},
				RefColumns: []*schema.Column{QuestionTypesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "question_type_questions_question_id",
				Columns:    []*schema.Column{QuestionTypeQuestionsColumns[1]},
				RefColumns: []*schema.Column{QuestionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AnswersTable,
		ChoicesTable,
		CustomersTable,
		ProjectsTable,
		QuestionsTable,
		QuestionTypesTable,
		SurveysTable,
		SurveyInvitationsTable,
		SurveyQuestionAnswersTable,
		QuestionTypeQuestionsTable,
	}
)

func init() {
	ChoicesTable.ForeignKeys[0].RefTable = AnswersTable
	ChoicesTable.ForeignKeys[1].RefTable = QuestionsTable
	ProjectsTable.ForeignKeys[0].RefTable = CustomersTable
	SurveyInvitationsTable.ForeignKeys[0].RefTable = CustomersTable
	SurveyInvitationsTable.ForeignKeys[1].RefTable = ProjectsTable
	SurveyInvitationsTable.ForeignKeys[2].RefTable = SurveysTable
	SurveyQuestionAnswersTable.ForeignKeys[0].RefTable = AnswersTable
	SurveyQuestionAnswersTable.ForeignKeys[1].RefTable = QuestionsTable
	SurveyQuestionAnswersTable.ForeignKeys[2].RefTable = SurveysTable
	QuestionTypeQuestionsTable.ForeignKeys[0].RefTable = QuestionTypesTable
	QuestionTypeQuestionsTable.ForeignKeys[1].RefTable = QuestionsTable
}
